name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: [3.7, 3.8, 3.9]

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install flake8 black pytest pytest-cov
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                  pip install -e .[dev]
            - name: Lint with flake8
              run: |
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            - name: Check formatting
              run: black . --check
            - name: Run tests
              run: pytest
            # Only get coverage once
            - if: ${{ matrix.python-version == '3.9' }}
              name: Get coverage
              run: |
                  SUMMARY="$(pytest --cov=. | tail -4 | head -1)"
                  TOKENS=($SUMMARY)
                  echo $SUMMARY
                  echo "COVERAGE=$(echo ${TOKENS[3]})" >> $GITHUB_ENV
                  REF=${{ github.ref }}
                  echo "github.ref: $REF"
                  IFS='/' read -ra PATHS <<< "$REF"
                  BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
                  echo $BRANCH_NAME
                  echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
            - if: ${{ matrix.python-version == '3.9' }}
              name: Create coverage badge
              uses: schneegans/dynamic-badges-action@v1.0.0
              with:
                  auth: ${{ secrets.GIST_SECRET }}
                  gistID: 03ac305b42d7c9ad4ef3213341bf3f2f
                  filename: macq__${{ env.BRANCH }}.json
                  label: Coverage
                  message: ${{ env.COVERAGE }}
                  color: green
                  namedLogo: pytest
#     - name: Build and publish
#       env:
#           TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#           TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#       run: |
#           python setup.py sdist bdist_wheel
#           twine upload dist/*
